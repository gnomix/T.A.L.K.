//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.3074
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par wsdl, Version=2.0.50727.42.
// 
/*
    This file is part of TALK (Wybecom).

    TALK is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2 as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    TALK is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with TALK.  If not, see <http://www.gnu.org/licenses/gpl-2.0.html>.
 
    TALK is based upon:
    - Sun JTAPI http://java.sun.com/products/jtapi/
    - JulMar TAPI http://julmar.com/
    - Asterisk.Net http://sourceforge.net/projects/asterisk-dotnet/
 
*/
namespace Wybecom.TalkPortal.Cisco.WebDialer.Proxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// Client SOAP du service web Webdialer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebdialerSoapServiceSoapBinding", Namespace="urn:WebdialerSoap")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WDDeviceInfo))]
    public partial class WebdialerSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback makeCallSoapOperationCompleted;
        
        private System.Threading.SendOrPostCallback endCallSoapOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProfileSoapOperationCompleted;
        
        private System.Threading.SendOrPostCallback isClusterUserSoapOperationCompleted;

        /// <summary>
        /// Ce constructeur ne nécessite aucun paramètre car ils sont obtenus à partir du fichier de configuration web.config:
        /// - WebDialerServer: url d'accès au service web WebDialer
        /// </summary>
        public WebdialerSoap() {
            string urlSetting = System.Web.Configuration.WebConfigurationManager.AppSettings["WebDialerServer"];
            if ((urlSetting != null))
            {
                this.Url = urlSetting;
            }
            else
            {
                this.Url = "https://esvucm01.si.fr:8443/webdialer/services/WebdialerSoapService";
            }
        }
        
        /// <remarks/>
        public event makeCallSoapCompletedEventHandler makeCallSoapCompleted;
        
        /// <remarks/>
        public event endCallSoapCompletedEventHandler endCallSoapCompleted;
        
        /// <remarks/>
        public event getProfileSoapCompletedEventHandler getProfileSoapCompleted;
        
        /// <remarks/>
        public event isClusterUserSoapCompletedEventHandler isClusterUserSoapCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:makeCallSoap", RequestNamespace="urn:WebdialerSoap", ResponseNamespace="urn:WebdialerSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public CallResponse makeCallSoap(Credential cred, string dest, UserProfile prof) {
            object[] results = this.Invoke("makeCallSoap", new object[] {
                        cred,
                        dest,
                        prof});
            return ((CallResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmakeCallSoap(Credential cred, string dest, UserProfile prof, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("makeCallSoap", new object[] {
                        cred,
                        dest,
                        prof}, callback, asyncState);
        }
        
        /// <remarks/>
        public CallResponse EndmakeCallSoap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CallResponse)(results[0]));
        }
        
        /// <remarks/>
        public void makeCallSoapAsync(Credential cred, string dest, UserProfile prof) {
            this.makeCallSoapAsync(cred, dest, prof, null);
        }
        
        /// <remarks/>
        public void makeCallSoapAsync(Credential cred, string dest, UserProfile prof, object userState) {
            if ((this.makeCallSoapOperationCompleted == null)) {
                this.makeCallSoapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmakeCallSoapOperationCompleted);
            }
            this.InvokeAsync("makeCallSoap", new object[] {
                        cred,
                        dest,
                        prof}, this.makeCallSoapOperationCompleted, userState);
        }
        
        private void OnmakeCallSoapOperationCompleted(object arg) {
            if ((this.makeCallSoapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.makeCallSoapCompleted(this, new makeCallSoapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:endCallSoap", RequestNamespace="urn:WebdialerSoap", ResponseNamespace="urn:WebdialerSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public CallResponse endCallSoap(Credential cred, UserProfile prof) {
            object[] results = this.Invoke("endCallSoap", new object[] {
                        cred,
                        prof});
            return ((CallResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginendCallSoap(Credential cred, UserProfile prof, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("endCallSoap", new object[] {
                        cred,
                        prof}, callback, asyncState);
        }
        
        /// <remarks/>
        public CallResponse EndendCallSoap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CallResponse)(results[0]));
        }
        
        /// <remarks/>
        public void endCallSoapAsync(Credential cred, UserProfile prof) {
            this.endCallSoapAsync(cred, prof, null);
        }
        
        /// <remarks/>
        public void endCallSoapAsync(Credential cred, UserProfile prof, object userState) {
            if ((this.endCallSoapOperationCompleted == null)) {
                this.endCallSoapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnendCallSoapOperationCompleted);
            }
            this.InvokeAsync("endCallSoap", new object[] {
                        cred,
                        prof}, this.endCallSoapOperationCompleted, userState);
        }
        
        private void OnendCallSoapOperationCompleted(object arg) {
            if ((this.endCallSoapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.endCallSoapCompleted(this, new endCallSoapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:getProfileSoap", RequestNamespace="urn:WebdialerSoap", ResponseNamespace="urn:WebdialerSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GetConfigResponse getProfileSoap(Credential cred, string userid) {
            object[] results = this.Invoke("getProfileSoap", new object[] {
                        cred,
                        userid});
            return ((GetConfigResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProfileSoap(Credential cred, string userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProfileSoap", new object[] {
                        cred,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetConfigResponse EndgetProfileSoap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetConfigResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getProfileSoapAsync(Credential cred, string userid) {
            this.getProfileSoapAsync(cred, userid, null);
        }
        
        /// <remarks/>
        public void getProfileSoapAsync(Credential cred, string userid, object userState) {
            if ((this.getProfileSoapOperationCompleted == null)) {
                this.getProfileSoapOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProfileSoapOperationCompleted);
            }
            this.InvokeAsync("getProfileSoap", new object[] {
                        cred,
                        userid}, this.getProfileSoapOperationCompleted, userState);
        }
        
        private void OngetProfileSoapOperationCompleted(object arg) {
            if ((this.getProfileSoapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProfileSoapCompleted(this, new getProfileSoapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:isClusterUserSoap", RequestNamespace="urn:WebdialerSoap", ResponseNamespace="urn:WebdialerSoap")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool isClusterUserSoap(string userid) {
            object[] results = this.Invoke("isClusterUserSoap", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisClusterUserSoap(string userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isClusterUserSoap", new object[] {
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisClusterUserSoap(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isClusterUserSoapAsync(string userid) {
            this.isClusterUserSoapAsync(userid, null);
        }
        
        /// <remarks/>
        public void isClusterUserSoapAsync(string userid, object userState) {
            if ((this.isClusterUserSoapOperationCompleted == null)) {
                this.isClusterUserSoapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisClusterUserSoapOperationCompleted);
            }
            this.InvokeAsync("isClusterUserSoap", new object[] {
                        userid}, this.isClusterUserSoapOperationCompleted, userState);
        }
        
        private void OnisClusterUserSoapOperationCompleted(object arg) {
            if ((this.isClusterUserSoapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isClusterUserSoapCompleted(this, new isClusterUserSoapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebdialerSoap")]
    public partial class Credential {
        
        private string userIDField;
        
        private string passwordField;
        
        /// <remarks/>
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebdialerSoap")]
    public partial class WDDeviceInfo {
        
        private string deviceNameField;
        
        private string[] linesField;
        
        /// <remarks/>
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebdialerSoap")]
    public partial class GetConfigResponse {
        
        private string descriptionField;
        
        private WDDeviceInfo[] deviceInfoListField;
        
        private int responseCodeField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public WDDeviceInfo[] deviceInfoList {
            get {
                return this.deviceInfoListField;
            }
            set {
                this.deviceInfoListField = value;
            }
        }
        
        /// <remarks/>
        public int responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebdialerSoap")]
    public partial class CallResponse {
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        /// <remarks/>
        public int responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        public string responseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:WebdialerSoap")]
    public partial class UserProfile {
        
        private string userField;
        
        private string deviceNameField;
        
        private string lineNumberField;
        
        private bool supportEMField;
        
        private string localeField;
        
        private bool dontAutoCloseField;
        
        private bool dontShowCallConfField;
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string lineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool supportEM {
            get {
                return this.supportEMField;
            }
            set {
                this.supportEMField = value;
            }
        }
        
        /// <remarks/>
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public bool dontAutoClose {
            get {
                return this.dontAutoCloseField;
            }
            set {
                this.dontAutoCloseField = value;
            }
        }
        
        /// <remarks/>
        public bool dontShowCallConf {
            get {
                return this.dontShowCallConfField;
            }
            set {
                this.dontShowCallConfField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void makeCallSoapCompletedEventHandler(object sender, makeCallSoapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class makeCallSoapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal makeCallSoapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void endCallSoapCompletedEventHandler(object sender, endCallSoapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class endCallSoapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal endCallSoapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getProfileSoapCompletedEventHandler(object sender, getProfileSoapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProfileSoapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProfileSoapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetConfigResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetConfigResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void isClusterUserSoapCompletedEventHandler(object sender, isClusterUserSoapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isClusterUserSoapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isClusterUserSoapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
