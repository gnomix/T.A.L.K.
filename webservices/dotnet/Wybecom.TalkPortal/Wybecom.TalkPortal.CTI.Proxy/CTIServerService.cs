//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.3603
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par wsdl, Version=2.0.50727.42.
// 
namespace Wybecom.TalkPortal.CTI.Proxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CTIServerPortBinding", Namespace="http://ws.jtapi.talk.wybecom.org/")]
    public partial class CTIServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CallOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnHookOperationCompleted;
        
        private System.Threading.SendOrPostCallback HangUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback HoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnHoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoNotDisturbOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DivertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback MonitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoffOperationCompleted;
        
        /// <remarks/>
        public CTIServerService() {
            string urlSetting = System.Web.Configuration.WebConfigurationManager.AppSettings["CTIServerService"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost:8081/Talk.CTIServer.WS/CTIServer";
            }
        }
        
        /// <remarks/>
        public event CallCompletedEventHandler CallCompleted;
        
        /// <remarks/>
        public event UnHookCompletedEventHandler UnHookCompleted;
        
        /// <remarks/>
        public event HangUpCompletedEventHandler HangUpCompleted;
        
        /// <remarks/>
        public event ForwardCompletedEventHandler ForwardCompleted;
        
        /// <remarks/>
        public event HoldCompletedEventHandler HoldCompleted;
        
        /// <remarks/>
        public event UnHoldCompletedEventHandler UnHoldCompleted;
        
        /// <remarks/>
        public event DoNotDisturbCompletedEventHandler DoNotDisturbCompleted;
        
        /// <remarks/>
        public event TransferCompletedEventHandler TransferCompleted;
        
        /// <remarks/>
        public event DivertCompletedEventHandler DivertCompleted;
        
        /// <remarks/>
        public event ConsultTransferCompletedEventHandler ConsultTransferCompleted;
        
        /// <remarks/>
        public event MonitorCompletedEventHandler MonitorCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoffCompletedEventHandler LogoffCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Call([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callee) {
            object[] results = this.Invoke("Call", new object[] {
                        caller,
                        callee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCall(string caller, string callee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Call", new object[] {
                        caller,
                        callee}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCall(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallAsync(string caller, string callee) {
            this.CallAsync(caller, callee, null);
        }
        
        /// <remarks/>
        public void CallAsync(string caller, string callee, object userState) {
            if ((this.CallOperationCompleted == null)) {
                this.CallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallOperationCompleted);
            }
            this.InvokeAsync("Call", new object[] {
                        caller,
                        callee}, this.CallOperationCompleted, userState);
        }
        
        private void OnCallOperationCompleted(object arg) {
            if ((this.CallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallCompleted(this, new CallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnHook([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callee, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("UnHook", new object[] {
                        callee,
                        callid});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnHook(string callee, string callid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnHook", new object[] {
                        callee,
                        callid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnHook(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UnHookAsync(string callee, string callid) {
            this.UnHookAsync(callee, callid, null);
        }
        
        /// <remarks/>
        public void UnHookAsync(string callee, string callid, object userState) {
            if ((this.UnHookOperationCompleted == null)) {
                this.UnHookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnHookOperationCompleted);
            }
            this.InvokeAsync("UnHook", new object[] {
                        callee,
                        callid}, this.UnHookOperationCompleted, userState);
        }
        
        private void OnUnHookOperationCompleted(object arg) {
            if ((this.UnHookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnHookCompleted(this, new UnHookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HangUp([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("HangUp", new object[] {
                        caller,
                        callid});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHangUp(string caller, string callid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HangUp", new object[] {
                        caller,
                        callid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndHangUp(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void HangUpAsync(string caller, string callid) {
            this.HangUpAsync(caller, callid, null);
        }
        
        /// <remarks/>
        public void HangUpAsync(string caller, string callid, object userState) {
            if ((this.HangUpOperationCompleted == null)) {
                this.HangUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHangUpOperationCompleted);
            }
            this.InvokeAsync("HangUp", new object[] {
                        caller,
                        callid}, this.HangUpOperationCompleted, userState);
        }
        
        private void OnHangUpOperationCompleted(object arg) {
            if ((this.HangUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HangUpCompleted(this, new HangUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Forward([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Forward", new object[] {
                        caller,
                        callid});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginForward(string caller, string callid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Forward", new object[] {
                        caller,
                        callid}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndForward(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ForwardAsync(string caller, string callid) {
            this.ForwardAsync(caller, callid, null);
        }
        
        /// <remarks/>
        public void ForwardAsync(string caller, string callid, object userState) {
            if ((this.ForwardOperationCompleted == null)) {
                this.ForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForwardOperationCompleted);
            }
            this.InvokeAsync("Forward", new object[] {
                        caller,
                        callid}, this.ForwardOperationCompleted, userState);
        }
        
        private void OnForwardOperationCompleted(object arg) {
            if ((this.ForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForwardCompleted(this, new ForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Hold([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Hold", new object[] {
                        callid,
                        caller});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHold(string callid, string caller, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Hold", new object[] {
                        callid,
                        caller}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndHold(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void HoldAsync(string callid, string caller) {
            this.HoldAsync(callid, caller, null);
        }
        
        /// <remarks/>
        public void HoldAsync(string callid, string caller, object userState) {
            if ((this.HoldOperationCompleted == null)) {
                this.HoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHoldOperationCompleted);
            }
            this.InvokeAsync("Hold", new object[] {
                        callid,
                        caller}, this.HoldOperationCompleted, userState);
        }
        
        private void OnHoldOperationCompleted(object arg) {
            if ((this.HoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HoldCompleted(this, new HoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnHold([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("UnHold", new object[] {
                        callid,
                        caller});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnHold(string callid, string caller, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnHold", new object[] {
                        callid,
                        caller}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnHold(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UnHoldAsync(string callid, string caller) {
            this.UnHoldAsync(callid, caller, null);
        }
        
        /// <remarks/>
        public void UnHoldAsync(string callid, string caller, object userState) {
            if ((this.UnHoldOperationCompleted == null)) {
                this.UnHoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnHoldOperationCompleted);
            }
            this.InvokeAsync("UnHold", new object[] {
                        callid,
                        caller}, this.UnHoldOperationCompleted, userState);
        }
        
        private void OnUnHoldOperationCompleted(object arg) {
            if ((this.UnHoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnHoldCompleted(this, new UnHoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DoNotDisturb([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("DoNotDisturb", new object[] {
                        caller});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDoNotDisturb(string caller, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoNotDisturb", new object[] {
                        caller}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDoNotDisturb(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DoNotDisturbAsync(string caller) {
            this.DoNotDisturbAsync(caller, null);
        }
        
        /// <remarks/>
        public void DoNotDisturbAsync(string caller, object userState) {
            if ((this.DoNotDisturbOperationCompleted == null)) {
                this.DoNotDisturbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoNotDisturbOperationCompleted);
            }
            this.InvokeAsync("DoNotDisturb", new object[] {
                        caller}, this.DoNotDisturbOperationCompleted, userState);
        }
        
        private void OnDoNotDisturbOperationCompleted(object arg) {
            if ((this.DoNotDisturbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoNotDisturbCompleted(this, new DoNotDisturbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Transfer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string destination, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Transfer", new object[] {
                        callid,
                        caller,
                        destination});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTransfer(string callid, string caller, string destination, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Transfer", new object[] {
                        callid,
                        caller,
                        destination}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndTransfer(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void TransferAsync(string callid, string caller, string destination) {
            this.TransferAsync(callid, caller, destination, null);
        }
        
        /// <remarks/>
        public void TransferAsync(string callid, string caller, string destination, object userState) {
            if ((this.TransferOperationCompleted == null)) {
                this.TransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOperationCompleted);
            }
            this.InvokeAsync("Transfer", new object[] {
                        callid,
                        caller,
                        destination}, this.TransferOperationCompleted, userState);
        }
        
        private void OnTransferOperationCompleted(object arg) {
            if ((this.TransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCompleted(this, new TransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Divert([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string caller, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Divert", new object[] {
                        callid,
                        caller});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDivert(string callid, string caller, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Divert", new object[] {
                        callid,
                        caller}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDivert(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DivertAsync(string callid, string caller) {
            this.DivertAsync(callid, caller, null);
        }
        
        /// <remarks/>
        public void DivertAsync(string callid, string caller, object userState) {
            if ((this.DivertOperationCompleted == null)) {
                this.DivertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDivertOperationCompleted);
            }
            this.InvokeAsync("Divert", new object[] {
                        callid,
                        caller}, this.DivertOperationCompleted, userState);
        }
        
        private void OnDivertOperationCompleted(object arg) {
            if ((this.DivertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DivertCompleted(this, new DivertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConsultTransfer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callee, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string destination, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("ConsultTransfer", new object[] {
                        callid,
                        callee,
                        destination});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConsultTransfer(string callid, string callee, string destination, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConsultTransfer", new object[] {
                        callid,
                        callee,
                        destination}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndConsultTransfer(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ConsultTransferAsync(string callid, string callee, string destination) {
            this.ConsultTransferAsync(callid, callee, destination, null);
        }
        
        /// <remarks/>
        public void ConsultTransferAsync(string callid, string callee, string destination, object userState) {
            if ((this.ConsultTransferOperationCompleted == null)) {
                this.ConsultTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultTransferOperationCompleted);
            }
            this.InvokeAsync("ConsultTransfer", new object[] {
                        callid,
                        callee,
                        destination}, this.ConsultTransferOperationCompleted, userState);
        }
        
        private void OnConsultTransferOperationCompleted(object arg) {
            if ((this.ConsultTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultTransferCompleted(this, new ConsultTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Monitor([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string monitorer, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string monitored, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Monitor", new object[] {
                        monitorer,
                        monitored});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMonitor(string monitorer, string monitored, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Monitor", new object[] {
                        monitorer,
                        monitored}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMonitor(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void MonitorAsync(string monitorer, string monitored) {
            this.MonitorAsync(monitorer, monitored, null);
        }
        
        /// <remarks/>
        public void MonitorAsync(string monitorer, string monitored, object userState) {
            if ((this.MonitorOperationCompleted == null)) {
                this.MonitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMonitorOperationCompleted);
            }
            this.InvokeAsync("Monitor", new object[] {
                        monitorer,
                        monitored}, this.MonitorOperationCompleted, userState);
        }
        
        private void OnMonitorOperationCompleted(object arg) {
            if ((this.MonitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MonitorCompleted(this, new MonitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string agentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string extension, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Login", new object[] {
                        agentId,
                        pwd,
                        extension});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string agentId, string pwd, string extension, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        agentId,
                        pwd,
                        extension}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogin(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void LoginAsync(string agentId, string pwd, string extension) {
            this.LoginAsync(agentId, pwd, extension, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string agentId, string pwd, string extension, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        agentId,
                        pwd,
                        extension}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.jtapi.talk.wybecom.org/", ResponseNamespace="http://ws.jtapi.talk.wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logoff([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string agentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("Logoff", new object[] {
                        agentId});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogoff(string agentId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logoff", new object[] {
                        agentId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogoff(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void LogoffAsync(string agentId) {
            this.LogoffAsync(agentId, null);
        }
        
        /// <remarks/>
        public void LogoffAsync(string agentId, object userState) {
            if ((this.LogoffOperationCompleted == null)) {
                this.LogoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoffOperationCompleted);
            }
            this.InvokeAsync("Logoff", new object[] {
                        agentId}, this.LogoffOperationCompleted, userState);
        }
        
        private void OnLogoffOperationCompleted(object arg) {
            if ((this.LogoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoffCompleted(this, new LogoffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CallCompletedEventHandler(object sender, CallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UnHookCompletedEventHandler(object sender, UnHookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnHookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnHookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void HangUpCompletedEventHandler(object sender, HangUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HangUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HangUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ForwardCompletedEventHandler(object sender, ForwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void HoldCompletedEventHandler(object sender, HoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UnHoldCompletedEventHandler(object sender, UnHoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnHoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnHoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DoNotDisturbCompletedEventHandler(object sender, DoNotDisturbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoNotDisturbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoNotDisturbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void TransferCompletedEventHandler(object sender, TransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DivertCompletedEventHandler(object sender, DivertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DivertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DivertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ConsultTransferCompletedEventHandler(object sender, ConsultTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MonitorCompletedEventHandler(object sender, MonitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MonitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MonitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void LogoffCompletedEventHandler(object sender, LogoffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}
