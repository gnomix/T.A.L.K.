//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.3603
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace Wybecom.TalkPortal.DMD.Proxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DMDWebServiceSoap", Namespace="http://wybecom.org/")]
    public partial class DMDWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMetaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SortSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultiLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCompleteFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectoriesForCiscoIPPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchForCiscoIPPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultsForCiscoIPPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorOperationCompleted;
        
        /// <remarks/>
        public DMDWebService() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["DMDWS"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/Talk/DMDWS.asmx";
            }
        }
		
		public DMDWebService(string url) {
            if ((url != null)) {
                this.Url = url;
            }
        }
        
        /// <remarks/>
        public event GetMetaDataCompletedEventHandler GetMetaDataCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SortSearchCompletedEventHandler SortSearchCompleted;
        
        /// <remarks/>
        public event LookupCompletedEventHandler LookupCompleted;
        
        /// <remarks/>
        public event MultiLookupCompletedEventHandler MultiLookupCompleted;
        
        /// <remarks/>
        public event AutoCompleteFilterCompletedEventHandler AutoCompleteFilterCompleted;
        
        /// <remarks/>
        public event GetDirectoriesForCiscoIPPhoneCompletedEventHandler GetDirectoriesForCiscoIPPhoneCompleted;
        
        /// <remarks/>
        public event GetDirectoriesCompletedEventHandler GetDirectoriesCompleted;
        
        /// <remarks/>
        public event SearchForCiscoIPPhoneCompletedEventHandler SearchForCiscoIPPhoneCompleted;
        
        /// <remarks/>
        public event GetResultsForCiscoIPPhoneCompletedEventHandler GetResultsForCiscoIPPhoneCompleted;
        
        /// <remarks/>
        public event ErrorCompletedEventHandler ErrorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/GetMetaData", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FieldType[] GetMetaData(string directoryName) {
            object[] results = this.Invoke("GetMetaData", new object[] {
                        directoryName});
            return ((FieldType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMetaData(string directoryName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMetaData", new object[] {
                        directoryName}, callback, asyncState);
        }
        
        /// <remarks/>
        public FieldType[] EndGetMetaData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FieldType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetaDataAsync(string directoryName) {
            this.GetMetaDataAsync(directoryName, null);
        }
        
        /// <remarks/>
        public void GetMetaDataAsync(string directoryName, object userState) {
            if ((this.GetMetaDataOperationCompleted == null)) {
                this.GetMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetaDataOperationCompleted);
            }
            this.InvokeAsync("GetMetaData", new object[] {
                        directoryName}, this.GetMetaDataOperationCompleted, userState);
        }
        
        private void OnGetMetaDataOperationCompleted(object arg) {
            if ((this.GetMetaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetaDataCompleted(this, new GetMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/Search", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Search(string directoryName, string filter) {
            object[] results = this.Invoke("Search", new object[] {
                        directoryName,
                        filter});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearch(string directoryName, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Search", new object[] {
                        directoryName,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string directoryName, string filter) {
            this.SearchAsync(directoryName, filter, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string directoryName, string filter, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        directoryName,
                        filter}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/SortSearch", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SortSearch(string directoryName, string filter, int sort) {
            object[] results = this.Invoke("SortSearch", new object[] {
                        directoryName,
                        filter,
                        sort});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSortSearch(string directoryName, string filter, int sort, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SortSearch", new object[] {
                        directoryName,
                        filter,
                        sort}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSortSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SortSearchAsync(string directoryName, string filter, int sort) {
            this.SortSearchAsync(directoryName, filter, sort, null);
        }
        
        /// <remarks/>
        public void SortSearchAsync(string directoryName, string filter, int sort, object userState) {
            if ((this.SortSearchOperationCompleted == null)) {
                this.SortSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSortSearchOperationCompleted);
            }
            this.InvokeAsync("SortSearch", new object[] {
                        directoryName,
                        filter,
                        sort}, this.SortSearchOperationCompleted, userState);
        }
        
        private void OnSortSearchOperationCompleted(object arg) {
            if ((this.SortSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SortSearchCompleted(this, new SortSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/Lookup", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Lookup(string dirNum) {
            object[] results = this.Invoke("Lookup", new object[] {
                        dirNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLookup(string dirNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Lookup", new object[] {
                        dirNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLookup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LookupAsync(string dirNum) {
            this.LookupAsync(dirNum, null);
        }
        
        /// <remarks/>
        public void LookupAsync(string dirNum, object userState) {
            if ((this.LookupOperationCompleted == null)) {
                this.LookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupOperationCompleted);
            }
            this.InvokeAsync("Lookup", new object[] {
                        dirNum}, this.LookupOperationCompleted, userState);
        }
        
        private void OnLookupOperationCompleted(object arg) {
            if ((this.LookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupCompleted(this, new LookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/MultiLookup", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LookupResponse[] MultiLookup(LookupResponse[] lookup) {
            object[] results = this.Invoke("MultiLookup", new object[] {
                        lookup});
            return ((LookupResponse[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMultiLookup(LookupResponse[] lookup, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MultiLookup", new object[] {
                        lookup}, callback, asyncState);
        }
        
        /// <remarks/>
        public LookupResponse[] EndMultiLookup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LookupResponse[])(results[0]));
        }
        
        /// <remarks/>
        public void MultiLookupAsync(LookupResponse[] lookup) {
            this.MultiLookupAsync(lookup, null);
        }
        
        /// <remarks/>
        public void MultiLookupAsync(LookupResponse[] lookup, object userState) {
            if ((this.MultiLookupOperationCompleted == null)) {
                this.MultiLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiLookupOperationCompleted);
            }
            this.InvokeAsync("MultiLookup", new object[] {
                        lookup}, this.MultiLookupOperationCompleted, userState);
        }
        
        private void OnMultiLookupOperationCompleted(object arg) {
            if ((this.MultiLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiLookupCompleted(this, new MultiLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/AutoCompleteFilter", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] AutoCompleteFilter(string prefixText, int count, string contextKey) {
            object[] results = this.Invoke("AutoCompleteFilter", new object[] {
                        prefixText,
                        count,
                        contextKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAutoCompleteFilter(string prefixText, int count, string contextKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AutoCompleteFilter", new object[] {
                        prefixText,
                        count,
                        contextKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndAutoCompleteFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void AutoCompleteFilterAsync(string prefixText, int count, string contextKey) {
            this.AutoCompleteFilterAsync(prefixText, count, contextKey, null);
        }
        
        /// <remarks/>
        public void AutoCompleteFilterAsync(string prefixText, int count, string contextKey, object userState) {
            if ((this.AutoCompleteFilterOperationCompleted == null)) {
                this.AutoCompleteFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCompleteFilterOperationCompleted);
            }
            this.InvokeAsync("AutoCompleteFilter", new object[] {
                        prefixText,
                        count,
                        contextKey}, this.AutoCompleteFilterOperationCompleted, userState);
        }
        
        private void OnAutoCompleteFilterOperationCompleted(object arg) {
            if ((this.AutoCompleteFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCompleteFilterCompleted(this, new AutoCompleteFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/GetDirectoriesForCiscoIPPhone", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetDirectoriesForCiscoIPPhone() {
            this.Invoke("GetDirectoriesForCiscoIPPhone", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectoriesForCiscoIPPhone(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectoriesForCiscoIPPhone", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetDirectoriesForCiscoIPPhone(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void GetDirectoriesForCiscoIPPhoneAsync() {
            this.GetDirectoriesForCiscoIPPhoneAsync(null);
        }
        
        /// <remarks/>
        public void GetDirectoriesForCiscoIPPhoneAsync(object userState) {
            if ((this.GetDirectoriesForCiscoIPPhoneOperationCompleted == null)) {
                this.GetDirectoriesForCiscoIPPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectoriesForCiscoIPPhoneOperationCompleted);
            }
            this.InvokeAsync("GetDirectoriesForCiscoIPPhone", new object[0], this.GetDirectoriesForCiscoIPPhoneOperationCompleted, userState);
        }
        
        private void OnGetDirectoriesForCiscoIPPhoneOperationCompleted(object arg) {
            if ((this.GetDirectoriesForCiscoIPPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectoriesForCiscoIPPhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/GetDirectories", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDirectories() {
            object[] results = this.Invoke("GetDirectories", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirectories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirectories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetDirectories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectoriesAsync() {
            this.GetDirectoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetDirectoriesAsync(object userState) {
            if ((this.GetDirectoriesOperationCompleted == null)) {
                this.GetDirectoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectoriesOperationCompleted);
            }
            this.InvokeAsync("GetDirectories", new object[0], this.GetDirectoriesOperationCompleted, userState);
        }
        
        private void OnGetDirectoriesOperationCompleted(object arg) {
            if ((this.GetDirectoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectoriesCompleted(this, new GetDirectoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/SearchForCiscoIPPhone", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SearchForCiscoIPPhone(string directory) {
            this.Invoke("SearchForCiscoIPPhone", new object[] {
                        directory});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchForCiscoIPPhone(string directory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchForCiscoIPPhone", new object[] {
                        directory}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSearchForCiscoIPPhone(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SearchForCiscoIPPhoneAsync(string directory) {
            this.SearchForCiscoIPPhoneAsync(directory, null);
        }
        
        /// <remarks/>
        public void SearchForCiscoIPPhoneAsync(string directory, object userState) {
            if ((this.SearchForCiscoIPPhoneOperationCompleted == null)) {
                this.SearchForCiscoIPPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchForCiscoIPPhoneOperationCompleted);
            }
            this.InvokeAsync("SearchForCiscoIPPhone", new object[] {
                        directory}, this.SearchForCiscoIPPhoneOperationCompleted, userState);
        }
        
        private void OnSearchForCiscoIPPhoneOperationCompleted(object arg) {
            if ((this.SearchForCiscoIPPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchForCiscoIPPhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/GetResultsForCiscoIPPhone", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetResultsForCiscoIPPhone(string directory, string givenName, string sn, string telephonenumber, string pos) {
            this.Invoke("GetResultsForCiscoIPPhone", new object[] {
                        directory,
                        givenName,
                        sn,
                        telephonenumber,
                        pos});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultsForCiscoIPPhone(string directory, string givenName, string sn, string telephonenumber, string pos, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultsForCiscoIPPhone", new object[] {
                        directory,
                        givenName,
                        sn,
                        telephonenumber,
                        pos}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetResultsForCiscoIPPhone(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void GetResultsForCiscoIPPhoneAsync(string directory, string givenName, string sn, string telephonenumber, string pos) {
            this.GetResultsForCiscoIPPhoneAsync(directory, givenName, sn, telephonenumber, pos, null);
        }
        
        /// <remarks/>
        public void GetResultsForCiscoIPPhoneAsync(string directory, string givenName, string sn, string telephonenumber, string pos, object userState) {
            if ((this.GetResultsForCiscoIPPhoneOperationCompleted == null)) {
                this.GetResultsForCiscoIPPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultsForCiscoIPPhoneOperationCompleted);
            }
            this.InvokeAsync("GetResultsForCiscoIPPhone", new object[] {
                        directory,
                        givenName,
                        sn,
                        telephonenumber,
                        pos}, this.GetResultsForCiscoIPPhoneOperationCompleted, userState);
        }
        
        private void OnGetResultsForCiscoIPPhoneOperationCompleted(object arg) {
            if ((this.GetResultsForCiscoIPPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultsForCiscoIPPhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wybecom.org/Error", RequestNamespace="http://wybecom.org/", ResponseNamespace="http://wybecom.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Error([System.Xml.Serialization.XmlElementAttribute("error")] string error1) {
            this.Invoke("Error", new object[] {
                        error1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginError(string error1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Error", new object[] {
                        error1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndError(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ErrorAsync(string error1) {
            this.ErrorAsync(error1, null);
        }
        
        /// <remarks/>
        public void ErrorAsync(string error1, object userState) {
            if ((this.ErrorOperationCompleted == null)) {
                this.ErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorOperationCompleted);
            }
            this.InvokeAsync("Error", new object[] {
                        error1}, this.ErrorOperationCompleted, userState);
        }
        
        private void OnErrorOperationCompleted(object arg) {
            if ((this.ErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wybecom.org/DatasourceConfiguration.xsd")]
    public enum FieldType {
        
        /// <remarks/>
        Identity,
        
        /// <remarks/>
        Mail,
        
        /// <remarks/>
        Telephone,
        
        /// <remarks/>
        GSM,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wybecom.org/")]
    public partial class LookupResponse {
        
        private string dirNumField;
        
        private string nameField;
        
        private string[] callidsField;
        
        /// <remarks/>
        public string dirNum {
            get {
                return this.dirNumField;
            }
            set {
                this.dirNumField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string[] callids {
            get {
                return this.callidsField;
            }
            set {
                this.callidsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetMetaDataCompletedEventHandler(object sender, GetMetaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SortSearchCompletedEventHandler(object sender, SortSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SortSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void LookupCompletedEventHandler(object sender, LookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void MultiLookupCompletedEventHandler(object sender, MultiLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookupResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookupResponse[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AutoCompleteFilterCompletedEventHandler(object sender, AutoCompleteFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCompleteFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCompleteFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDirectoriesForCiscoIPPhoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetDirectoriesCompletedEventHandler(object sender, GetDirectoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SearchForCiscoIPPhoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetResultsForCiscoIPPhoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
